{"version":3,"sources":["webpack:///src/app/pages/landing/membership-activation/screen-testing/screen-testing.page.html","webpack:///src/app/pages/landing/membership-activation/screen-testing/screen-testing-routing.module.ts","webpack:///src/app/pages/landing/membership-activation/screen-testing/screen-testing.module.ts","webpack:///src/app/pages/landing/membership-activation/screen-testing/screen-testing.page.scss","webpack:///src/app/pages/landing/membership-activation/screen-testing/screen-testing.page.ts"],"names":["routes","path","component","ScreenTestingPageRoutingModule","imports","forChild","exports","ScreenTestingPageModule","declarations","ScreenTestingPage","platform","utility","alertController","navCtrl","lineWidth","touching","canvasElement","canvas","nativeElement","width","height","ctx","getContext","fillStyle","fillRect","showToast","event","test","checkCanvas","canvasPosition","getBoundingClientRect","currentX","currentY","i","changedTouches","length","pageX","x","pageY","y","beginPath","globalCompositeOperation","arc","Math","PI","fill","saveX","saveY","create","header","message","backdropDismiss","buttons","text","role","handler","console","log","navigationExtras","queryParams","screenHasProblem","navigateForward","alert","present","pixelBuffer","Uint32Array","getImageData","data","buffer","some","color","blank","isCanvasBlank","presentAlertConfirm","selector","template"],"mappings":"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","file":"membership-activation-screen-testing-screen-testing-module-es5.js","sourcesContent":["export default \"<ion-content [fullscreen]=\\\"true\\\" mode=\\\"md\\\">\\n  <canvas #screenTest \\n  (touchstart)=\\\"startTouch($event)\\\" \\n  (touchmove)=\\\"moveTouch($event)\\\" \\n  (touchend)=\\\"endTouch()\\\">\\n</canvas>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ScreenTestingPage } from './screen-testing.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScreenTestingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ScreenTestingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ScreenTestingPageRoutingModule } from './screen-testing-routing.module';\n\nimport { ScreenTestingPage } from './screen-testing.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ScreenTestingPageRoutingModule\n  ],\n  declarations: [ScreenTestingPage]\n})\nexport class ScreenTestingPageModule {}\n","export default \"ion-content {\\n  --overflow: hidden;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbGFuZGluZy9tZW1iZXJzaGlwLWFjdGl2YXRpb24vc2NyZWVuLXRlc3RpbmcvQzpcXFVzZXJzXFxtYWNhblxcRG93bmxvYWRzXFx6Zml4X2FwcF9hbmd1bGFyX2h0dHBfbmV3OVxcemZpeF9hcHBfYW5ndWxhcl9odHRwX25ldzkvc3JjXFxhcHBcXHBhZ2VzXFxsYW5kaW5nXFxtZW1iZXJzaGlwLWFjdGl2YXRpb25cXHNjcmVlbi10ZXN0aW5nXFxzY3JlZW4tdGVzdGluZy5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2xhbmRpbmcvbWVtYmVyc2hpcC1hY3RpdmF0aW9uL3NjcmVlbi10ZXN0aW5nL3NjcmVlbi10ZXN0aW5nLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFXO0FDQ2YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sYW5kaW5nL21lbWJlcnNoaXAtYWN0aXZhdGlvbi9zY3JlZW4tdGVzdGluZy9zY3JlZW4tdGVzdGluZy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XHJcbiAgICAtLW92ZXJmbG93OiBoaWRkZW47XHJcbn0iLCJpb24tY29udGVudCB7XG4gIC0tb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiJdfQ== */\";","import { Component, ViewChild } from \"@angular/core\";\nimport { Platform } from \"@ionic/angular\";\nimport { UtilitiesService } from \"../../../../services/utilities.service\";\nimport { AlertController } from '@ionic/angular';\nimport { NavController } from '@ionic/angular';\nimport { NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: \"app-screen-testing\",\n  templateUrl: \"./screen-testing.page.html\",\n  styleUrls: [\"./screen-testing.page.scss\"],\n})\nexport class ScreenTestingPage {\n\n  @ViewChild(\"screenTest\", { static: false })\n\n  canvas: any;\n  canvasElement: any;\n  saveX: number;\n  saveY: number;\n\n  lineWidth = 10;\n  touching = false;\n\n  constructor(\n    private platform: Platform,\n    private utility: UtilitiesService,\n    public alertController: AlertController,\n    public navCtrl: NavController\n  ) {}\n\n  ionViewWillEnter() {\n    this.canvasElement = this.canvas.nativeElement;\n    this.canvasElement.width = this.platform.width() + \"\";\n    this.canvasElement.height = this.platform.height() + \"\";\n\n    let ctx = this.canvasElement.getContext(\"2d\");\n    ctx.fillStyle = \"blue\";\n    ctx.fillRect(\n      10,\n      10,\n      this.canvasElement.width - 20,\n      this.canvasElement.height - 20\n    );\n\n    this.utility.showToast(\"Bersihkan layar untuk melanjutkan.\");\n  }\n\n  startTouch(event) {\n    this.touching = true;\n\n    this.test(event);\n  }\n\n  moveTouch(event) {\n    if (!this.touching) return;\n\n    this.test(event);\n  }\n\n  endTouch() {\n    this.touching = false;\n    this.checkCanvas();\n  }\n\n  test(event) {\n    const canvasPosition = this.canvasElement.getBoundingClientRect();\n    let ctx = this.canvasElement.getContext(\"2d\");\n\n    let currentX;\n    let currentY;\n    var i;\n    for (i = 0; i < event.changedTouches.length; i++) {\n      currentX = event.changedTouches[i].pageX - canvasPosition.x;\n      currentY = event.changedTouches[i].pageY - canvasPosition.y;\n    }\n\n    ctx.beginPath();\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.arc(currentX, currentY, 42, 0, Math.PI * 2, false);\n    ctx.fill();\n\n    this.saveX = currentX;\n    this.saveY = currentY;\n  }\n\n  async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      header: 'ZFix',\n      message: 'Jika anda tidak dapat melanjutkan test ini, anda bisa melewati dan lanjut ke tahap selanjutnya dengan konfirmasi bahwa layar memiliki masalah.',\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'Lanjut',\n          role: 'cancel',\n          handler: () => {\n            console.log('Continue');\n          }\n        }, {\n          text: 'Lewati',\n          handler: async () => {\n            const alert = await this.alertController.create({\n              header: 'ZFix',\n              message: 'Jika anda skip tahap ini, proses aktivasi tidak dapat dilanjutkan.',\n              backdropDismiss: false,\n              buttons: [      \n                {\n                  text: 'Lanjut',\n                  role: 'cancel',\n                  handler: () => {\n                    // console.log('Continue');\n                  }\n                },{\n                    text: 'Tetap skip',\n                    handler: () => {\n                      let navigationExtras: NavigationExtras = {\n                        queryParams: {\n                          screenHasProblem: 1,\n                        }\n                      };\n                      this.navCtrl.navigateForward([\"landing\", 'home'], navigationExtras);\n                      this.utility.showToast(\"Layar memiliki masalah.\");\n                    }\n                  }\n\n              ]\n            });\n            await alert.present();\n          }\n        }, \n        // {\n        //   text: 'Lewati',\n        //   handler: () => {\n        //     let navigationExtras: NavigationExtras = {\n        //       queryParams: {\n        //         screenHasProblem: 1,\n        //       }\n        //     };\n        //     this.navCtrl.navigateForward([\"/landing/membership-activation/device-detail/screen-testing/device-image\"], navigationExtras);\n        //     this.utility.showToast(\"Layar memiliki masalah.\");\n        //   }\n        // }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  isCanvasBlank(canvas) {\n    let ctx = this.canvasElement.getContext(\"2d\");\n\n    const pixelBuffer = new Uint32Array(\n      ctx.getImageData(0, 0, canvas.width, canvas.height).data.buffer\n    );\n\n    return !pixelBuffer.some((color) => color !== 0);\n  }\n\n  checkCanvas() {\n    const blank = this.isCanvasBlank(this.canvasElement);\n\n    if (blank) {\n      this.utility.showToast(\"Layar telah bersih.\");\n      let navigationExtras: NavigationExtras = {\n        queryParams: {\n          screenHasProblem: 0,\n        }\n      };\n      this.navCtrl.navigateForward([\"/landing/membership-activation/device-detail/screen-testing/device-image\"], navigationExtras);\n    } else {\n      this.utility.showToast(\"Layar belum dibersihkan.\");\n      this.presentAlertConfirm()\n    }\n  }\n}\n"]}