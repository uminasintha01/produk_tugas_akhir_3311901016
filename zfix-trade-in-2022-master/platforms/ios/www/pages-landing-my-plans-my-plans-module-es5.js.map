{"version":3,"sources":["webpack:///src/app/pages/landing/my-plans/my-plans.page.html","webpack:///src/app/pages/landing/my-plans/my-plans-routing.module.ts","webpack:///src/app/pages/landing/my-plans/my-plans.module.ts","webpack:///src/app/pages/landing/my-plans/my-plans.page.scss","webpack:///src/app/pages/landing/my-plans/my-plans.page.ts"],"names":["routes","path","component","MyPlansPageRoutingModule","imports","forChild","exports","MyPlansPageModule","declarations","MyPlansPage","storage","MembershipService","utilsService","user","segment","sliderOptions","initialSlide","slidePerView","speed","getMyPlan","ev","selectedSlide","slideTo","slides","getActiveIndex","then","selectedIndex","get","token","myPlan","subscribe","response","rawCountdown","Date","data","process","expired_at","getTime","x","setInterval","now","countdown","days","Math","floor","document","getElementById","innerHTML","err","showToast","selector","template"],"mappings":"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","file":"pages-landing-my-plans-my-plans-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\" mode=\\\"md\\\">\\n\\n  <ion-toolbar class=\\\"toolbar-color\\\">\\n    <ion-buttons slot=\\\"start\\\" style=\\\"color: white;\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"color: white;\\\">\\n      My Plans\\n    </ion-title>\\n  </ion-toolbar>\\n\\n  <ion-toolbar>\\n    <ion-segment mode=\\\"md\\\" [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\n      <ion-segment-button value=\\\"0\\\">\\n        Activated\\n      </ion-segment-button>\\n\\n      <ion-segment-button value=\\\"1\\\">\\n        Expired\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-content>\\n   <ion-slides #slides pager=\\\"false\\\" [options]=\\\"sliderOptions\\\" (ionSlideDidChange)=\\\"slideShanged(slides)\\\" (ionSlidesDidLoad)=\\\"slideShanged(slides)\\\">\\n     <ion-slide>\\n      <ion-card *ngFor=\\\"let data of user.data?.process\\\">\\n        <div *ngIf=\\\"(data.status == 1 || data.status == 0 )\\\">\\n      <ion-card-header>\\n        <ion-card-title>Activated</ion-card-title>\\n      </ion-card-header>\\n    \\n      <ion-card-content >\\n        \\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Imei:</ion-label>\\n            <ion-input value=\\\"{{ data.imei }}\\\" readonly></ion-input>\\n          </ion-item>\\n  \\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Type:</ion-label>\\n            <ion-input value=\\\"{{ data.device_type }}\\\" readonly></ion-input>\\n          </ion-item>\\n  \\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Manufacturer:</ion-label>\\n            <ion-input value=\\\"{{ data.device_manufacturer }}\\\" readonly></ion-input>\\n          </ion-item>\\n  \\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Model:</ion-label>\\n            <ion-input value=\\\"{{ data.device_model }}\\\" readonly></ion-input>\\n          </ion-item>\\n  \\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">RAM:</ion-label>\\n            <ion-input value=\\\"{{ data.device_ram }}\\\" readonly></ion-input>\\n          </ion-item>\\n  \\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Storage:</ion-label>\\n            <ion-input value=\\\"{{ data.device_storage }}\\\" readonly></ion-input>\\n          </ion-item>\\n          \\n          <ion-item *ngIf=\\\"data.status == 1\\\">\\n            <ion-label position=\\\"floating\\\">Activated Date:</ion-label>\\n            <ion-input value=\\\"{{ data.actived_at }}\\\" readonly></ion-input>\\n          </ion-item>\\n\\n          <ion-item *ngIf=\\\"data.status == 1\\\">\\n            <ion-label position=\\\"floating\\\" >Expired Date:</ion-label>\\n            <ion-input value=\\\"{{ data.expired_at }}\\\" readonly></ion-input>\\n          </ion-item>\\n\\n          <ion-item *ngIf=\\\"data.status == 1\\\">\\n            <ion-label position=\\\"stacked\\\">Duration</ion-label>\\n            <ion-input id=\\\"countdown\\\"></ion-input>          \\n          </ion-item>\\n\\n          <ion-item *ngIf=\\\"data.status == 0\\\">\\n            <ion-label position=\\\"stacked\\\">Status</ion-label>\\n            <ion-input>Menunggu Verifikasi</ion-input>          \\n          </ion-item>\\n        \\n      </ion-card-content>\\n        </div>\\n      </ion-card>  \\n     </ion-slide>\\n\\n     <ion-slide>\\n     <ion-card *ngFor=\\\"let data of user.data?.process\\\">\\n      <div *ngIf=\\\"data.status == -2\\\">\\n    <ion-card-header>\\n      <ion-card-title>Expired</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content >\\n      \\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Imei:</ion-label>\\n          <ion-input value=\\\"{{ data.imei }}\\\" readonly></ion-input>\\n        </ion-item>\\n \\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Type:</ion-label>\\n          <ion-input value=\\\"{{ data.device_type }}\\\" readonly></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Manufacturer:</ion-label>\\n          <ion-input value=\\\"{{ data.device_manufacturer }}\\\" readonly></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Model:</ion-label>\\n          <ion-input value=\\\"{{ data.device_model }}\\\" readonly></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">RAM:</ion-label>\\n          <ion-input value=\\\"{{ data.device_ram }}\\\" readonly></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Storage:</ion-label>\\n          <ion-input value=\\\"{{ data.device_storage }}\\\" readonly></ion-input>\\n        </ion-item>\\n        \\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Expired Date:</ion-label>\\n          <ion-input value=\\\"{{ data.expired_at }}\\\" readonly></ion-input>\\n        </ion-item>\\n      \\n    </ion-card-content>\\n    </div>\\n    </ion-card>  \\n     </ion-slide>\\n   </ion-slides>\\n  </ion-content>\\n    \";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MyPlansPage } from './my-plans.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyPlansPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MyPlansPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MyPlansPage } from './my-plans.page';\n\nimport { MyPlansPageRoutingModule } from './my-plans-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    MyPlansPageRoutingModule\n  ],\n  declarations: [MyPlansPage]\n})\nexport class MyPlansPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xhbmRpbmcvbXktcGxhbnMvbXktcGxhbnMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { IonSlides } from '@ionic/angular';\nimport { Storage } from \"@ionic/storage\";\nimport { tokenKey } from \"../../../config/api\";\nimport { MembershipApiService } from \"../../../services/api/membership-api.service\";\nimport { UtilitiesService } from \"../../../services/utilities.service\";\n\n\n@Component({\n  selector: 'app-my-plans',\n  templateUrl: 'my-plans.page.html',\n  styleUrls: ['my-plans.page.scss']\n})\nexport class MyPlansPage implements OnInit {\n  \n  user: any = [];\n  rawCountdown;\n  selectedSlide: any;\n  segment = 0;\n  sliderOptions = {\n    initialSlide: 0,\n    slidePerView: 1,\n    speed: 400\n  }\n  now;\n  countdown;\n  x;\n  days;\n  hours;\n  minutes;\n  seconds;\n\n\n  constructor(\n    private storage: Storage,\n    private MembershipService: MembershipApiService,\n    private utilsService: UtilitiesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n  this.getMyPlan();\n  }\n\n  async segmentChanged(ev){\n    await this.selectedSlide.slideTo(this.segment)\n  }\n\n async slideShanged(slides : IonSlides){\n\n    this.selectedSlide = slides;\n    slides.getActiveIndex().then(selectedIndex =>{\n      this.segment = selectedIndex;\n    })\n  }\n\n  getMyPlan() {\n    this.storage.get(tokenKey).then((token) => {\n      this.MembershipService.myPlan(token).subscribe(\n        (response) => {\n          this.user = response;\n          this.rawCountdown = new Date(this.user.data.process[0].expired_at).getTime();\n          // this.now = new Date().getTime();\n          // this.countdown = this.rawCountdown -  this.now;\n          this.x = setInterval(() => {\n            this.now = new Date().getTime();\n            this.countdown = this.rawCountdown - this.now;\n            var days = Math.floor(this.countdown / (1000 * 60 * 60 * 24));\n\n            document.getElementById(\"countdown\").innerHTML = days + \"Hari lagi \";\n          }, 1000);\n        },\n        (err) => {\n          this.user = [];\n          this.utilsService.showToast(\"There is a problem.\");\n        }\n      );\n    });\n\n    // let date = new Date().getTime()\n    // console.log(date);\n  }\n\n}\n"]}